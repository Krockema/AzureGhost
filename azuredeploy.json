{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "siteName": {
        "type": "string"
      },
      "hostingPlanName": {
        "type": "string"
      },
      "siteLocation": {
        "type": "string"
      },
      "sku": {
        "type": "string",
        "allowedValues": [
          "Free",
          "Shared",
          "Basic",
          "Standard"
        ],
        "defaultValue": "Free"
      },
      "workerSize": {
        "type": "string",
        "allowedValues": [
          "0",
          "1",
          "2"
        ],
        "defaultValue": "0"
      },
      "repoUrl": {
        "type": "string"
      },
      "branch": {
        "type": "string"
      },
      "isManualIntegration": {
          "type": "bool",
          "defaultValue": true
      },
      "isMercurial":{
        "type": "bool",
        "defaultValue":false
      },
      "azureNodeVersion":{
        "type": "string",
        "defaultValue": "8.9.0"
      },
      "ghostUrl":{
        "type": "string",
        "defaultValue": ""
      }
    },
    "variables": {
      "ghostUrl": "[if(equals(parameters('ghostUrl'), ''), concat('https://', parameters('siteName'), '.azurewebsites.net'), parameters('ghostUrl'))]",
      "storageAccountName": "[uniqueString(resourceGroup().id, '723bd985-94ac-4a30-9859-1e418b730786')]"
    },
    "resources": [
      {
        "apiVersion": "2014-06-01",
        "name": "[parameters('hostingPlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[parameters('siteLocation')]",
        "properties": {
          "name": "[parameters('hostingPlanName')]",
          "sku": "[parameters('sku')]",
          "workerSize": "[parameters('workerSize')]",
          "numberOfWorkers": 1
        }
      },
      {
          "name": "[variables('storageAccountName')]",
          "type": "Microsoft.Storage/storageAccounts",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-01-01",
          "sku": {
              "name": "Standard_LRS"
          },
          "dependsOn": [],
          "tags": {
              "displayName": "Storage"
          },
          "kind": "Storage"
      },
      {
        "apiVersion": "2014-06-01",
        "name": "[parameters('siteName')]",
        "type": "Microsoft.Web/sites",
        "location": "[parameters('siteLocation')]",
        "tags": {
          "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
          "[variables('storageAccountName')]"
        ],
        "properties": {
          "name": "[parameters('siteName')]",
          "serverFarm": "[parameters('hostingPlanName')]"
        },
        "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "appsettings",
              "type": "config",
              "dependsOn": [
                  "[concat('Microsoft.Web/Sites/', parameters('siteName'))]"
              ],
              "properties": {
                "url": "[variables('ghostUrl')]",
                "WEBSITE_NODE_DEFAULT_VERSION": "[parameters('azureNodeVersion')]",
                "AZURE_STORAGE_CONNECTION_STRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
              }
            },
          {
            "apiVersion": "2014-06-01",
            "name": "web",
            "type": "sourcecontrols",
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
            ],
            "properties": {
              "RepoUrl": "[parameters('repoUrl')]",
              "branch": "[parameters('branch')]",
              "IsManualIntegration": "[parameters('isManualIntegration')]",
              "IsMercurial": "[parameters('isMercurial')]"
            }
          }
        ]
      }
    ]
  }
